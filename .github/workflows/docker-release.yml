name: Docker Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and push (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  docker-publish:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.tag }}"
          fi
          # Remove 'v' prefix if present
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Building for version: $VERSION"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.version.outputs.tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=v${{ steps.version.outputs.version }}
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ github.event.repository.updated_at }}

      - name: Set lowercase repository name
        id: repo
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "name_lower=${REPO_LOWER}" >> $GITHUB_OUTPUT
          
      - name: Wait for image availability
        run: |
          echo "Waiting for image to be available in registry..."
          sleep 10
          docker pull ghcr.io/${{ steps.repo.outputs.name_lower }}:${{ steps.version.outputs.version }}
          
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ steps.repo.outputs.name_lower }}:${{ steps.version.outputs.version }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          files: sbom.spdx.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign container image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign --yes ghcr.io/${{ steps.repo.outputs.name_lower }}@${{ steps.build.outputs.digest }}